med = c()
vari = c()
for(i in 1:nrow(Z)){
# Actualizar med
med[i] = mean(z[1:i,1])
vari[i] = var(z[1:i,1])
}
# Comportamiento de la media calculada con las observaciones de la cadena
# Ver como hacer la media
med = c()
vari = c()
for(i in 1:nrow(Z)){
# Actualizar med
med[i] = mean(Z[1:i,1])
vari[i] = var(Z[1:i,1])
}
# Mostrar el comportamiento de la media
plot(1:2000,med)
# Mostrar el comportamiento de la media
plot(1:2000,med,type = "o",pch = 16)
# Mostrar el comportamiento de la media
plot(1:2000,med,type = "o",pch = 16,
main = "Convergencia de la media con las observaciones del remuestreo")
# Mostrar el comportamiento de la media
plot(1:2000,med,type = "o",pch = 16,
main = "Convergencia de la media con \nlas observaciones del remuestreo")
# Mostrar el comportamiento de la varianza
plot(1:2000,var,type = "o",pch = 16,
main = "Convergencia de la varianza con \nlas observaciones del remuestreo")
# Mostrar el comportamiento de la varianza
plot(1:2000,vari,type = "o",pch = 16,
main = "Convergencia de la varianza con \nlas observaciones del remuestreo")
# Comportamiento de la media condicional
plot(1:2000,Z[,5],type = "l")
par(mfrow = c(2,2))
# Comportamiento de la media condicional
plot(1:2000,Z[,4],type = "l")
# Comportamiento de la media condicional
plot(1:2000,Z[,5],type = "l")
# Comportamiento de la media calculada con las observaciones de la cadena
# Ver como hacer la media
med = c()
vari = c()
for(i in 1:nrow(Z)){
# Actualizar med
med[i] = mean(Z[1:i,1])
vari[i] = var(Z[1:i,1])
}
# Mostrar el comportamiento de la media
plot(1:2000,med,type = "o",pch = 16,
main = "Convergencia de la media con \nlas observaciones del remuestreo")
# Mostrar el comportamiento de la varianza
plot(1:2000,vari,type = "o",pch = 16,
main = "Convergencia de la varianza con \nlas observaciones del remuestreo")
# Ver rapido la distribución de la media en el tiempo
# Mini benchmark
Z = gibbs(x2,2000,medias1,var1)
# Comportamiento de la media condicional
plot(1:2000,Z[,4],type = "l")
# Comportamiento de la media condicional
plot(1:2000,Z[,5],type = "l")
# Ver rapido la distribución de la media en el tiempo
# Mini benchmark
Z = gibbs(x2,2000,medias1,var1)
# Comportamiento de la media condicional
plot(1:2000,Z[,4],type = "l")
# Comportamiento de la media condicional
plot(1:2000,Z[,5],type = "l")
# Comportamiento de la media calculada con las observaciones de la cadena
# Ver como hacer la media
med = c()
vari = c()
for(i in 1:nrow(Z)){
# Actualizar med
med[i] = mean(Z[1:i,1])
vari[i] = var(Z[1:i,1])
}
# Mostrar el comportamiento de la media
plot(1:2000,med,type = "o",pch = 16,
main = "Convergencia de la media ")
# Mostrar el comportamiento de la varianza
plot(1:2000,vari,type = "o",pch = 16,
main = "Convergencia de la varianza")
#### Imagen 2: Selena QUintanilla ####
### Cargando la imagen desde la ruta local
ruta1 = "/home/angel/Escritorio/MIAPrimerSemestre/Razonamiento bajo incertidumbre/Tarea 6. GIBB SAMPLER/IMAGENES/IM3.jpg" # Ruta local de la imagen
imagen1 = readJPEG(ruta1) # Descomponer la imagen en sus canales RGB
datos1 = pixeles(imagen1)
#### Imagen 2: Selena QUintanilla ####
### Cargando la imagen desde la ruta local
ruta1 = "/home/angel/Escritorio/MIAPrimerSemestre/Razonamiento bajo incertidumbre/Tarea 6. GIBB SAMPLER/IMAGENES/IM3.jpg" # Ruta local de la imagen
imagen1 = readJPEG(ruta1) # Descomponer la imagen en sus canales RGB
datos1 = pixeles(imagen1)
# Selección de la Carita
subSI1 = datos1[(datos1$X>=130 &datos1$X<=240) &
(datos1$Y>=150 &datos1$Y<=220), ]
plot3d(x = subSI1$Y,
y = 1,
z = subSI1$X,
col = rgb(subSI1$R,subSI1$G,subSI1$B),size = 10)# Fondo
# Puntos de la piel
set.seed(64)
N = 10
mSI1 = subSI1[sample(1:nrow(subSI1),
size= N),]
# Gráficar los valores de los puntos para entrenar
plot3d(x = mSI1$R,
y = mSI1$G,
z = mSI1$B,
col = rgb(mSI1$R,mSI1$G,mSI1$B),size = 30)# Fondo
# Gráficar los valores de los puntos para entrenar
plot3d(x = mSI1$R,
y = mSI1$G,
z = mSI1$B,
col = rgb(mSI1$R,mSI1$G,mSI1$B),size = 30)# Fondo
# Gráficar los valores de los puntos para entrenar
plot3d(x = mSI1$R,
y = mSI1$G,
z = mSI1$B,
col = rgb(mSI1$R,mSI1$G,mSI1$B),size = 30)# Fondo
rgl.snapshot("RESULTADOS/R2.2.png", fmt = "png")
### Piel 1
piel1 = mSI1[,1:3]
# Obtener el vector de medias
medias1 = apply(piel1,2,mean);medias1
# Obtener la matriz de varianzas
var1 = var(piel1);var1
### Tomar 3 puntos y muestrear 30 puntos de su trayectoria ####
P = 30
# Definir 3 puntos , el primero sera el origen, el segundo el punto c(1,1,1)
x1 = c(0,0,0)
x2 = c(1,1,1)
x3 = c(0.5,0.5,0.5)
### G1 = Gráficar los 30 remuestreos ####
set.seed(19)
z1 = gibbs(x1,P,medias1,var1)
plot3d(x = z1[,1],
y = z1[,2],
z = z1[,3],
col = rgb(z1[,1],z1[,2],z1[,3]),
size = 20)
# Añadir líneas que conecten los puntos en el orden en que aparecen
lines3d(
x = z1[,1],  # Coordenadas x
y = z1[,2],  # Coordenadas y
z = z1[,3],  # Coordenadas z
col = "black",  # Color de las líneas
lwd = 2       # Grosor de las líneas
)
# Añadir la media
# Usar points3d para agregarlo al gráfico
points3d(x = medias1[1],
y = medias1[2],
z = medias1[3],
col = rgb(medias1[1],medias1[2],medias1[3]), # Color del punto adicional
size = 100)  # Tamaño del punto adicional
rgl.snapshot("RESULTADOS/R2.3.png", fmt = "png")
### G2 = Gráficar los 30 remuestreos ####
set.seed(19)
z2 = gibbs(x2,P,medias1,var1)
plot3d(x = z2[,1],
y = z2[,2],
z = z2[,3],
col = rgb(z2[,1],z2[,2],z2[,3]),
size = 20)
# Añadir líneas que conecten los puntos en el orden en que aparecen
lines3d(
x = z2[,1],  # Coordenadas x
y = z2[,2],  # Coordenadas y
z = z2[,3],  # Coordenadas z
col = "black",  # Color de las líneas
lwd = 2       # Grosor de las líneas
)
# Añadir la media
# Usar points3d para agregarlo al gráfico
points3d(x = medias1[1],
y = medias1[2],
z = medias1[3],
col = rgb(medias1[1],medias1[2],medias1[3]), # Color del punto adicional
size = 100)  # Tamaño del punto adicional
rgl.snapshot("RESULTADOS/R2.4.png", fmt = "png")
### G3 = Gráficar los 30 remuestreos ####
set.seed(19)
z3 = gibbs(x3,P,medias1,var1)
plot3d(x = z3[,1],
y = z3[,2],
z = z3[,3],
col = rgb(z3[,1],z3[,2],z3[,3]),
size = 20)
# Añadir líneas que conecten los puntos en el orden en que aparecen
lines3d(
x = z3[,1],  # Coordenadas x
y = z3[,2],  # Coordenadas y
z = z3[,3],  # Coordenadas z
col = "black",  # Color de las líneas
lwd = 2       # Grosor de las líneas
)
# Añadir la media
# Usar points3d para agregarlo al gráfico
points3d(x = medias1[1],
y = medias1[2],
z = medias1[3],
col = rgb(medias1[1],medias1[2],medias1[3]), # Color del punto adicional
size = 100)  # Tamaño del punto adicional
rgl.snapshot("RESULTADOS/R2.5.png", fmt = "png")
#### Selección de los 100 puntos ####
##### Tomar 100 puntos aleatorios de toda la imagen ####
set.seed(19)
#mini = datos1[sample(1:nrow(datos1),100),1:3]
mini = as.matrix(subSI1[sample(1:nrow(subSI1),100),1:3])
# Aplicarle el gibbsampler y guardar solo el final
resu = matrix(0,nrow = 100, ncol = 5)
i = 1
for(i in 1:100){
# Aplicar el gibbsampler
gs = gibbs(mini[i,],30,medias1,var1)
# Guardar el ultimo valor
resu[i,] = gs[30,]
}
# Gráficar bonito los puntos
plot3d(x = mini[,1],
y = mini[,2],
z = mini[,3],
col = rgb(mini[,1],mini[,2],mini[,3]),size = 15)
# Usar points3d para agregarlo al gráfico
points3d(x = medias1[1],
y = medias1[2],
z = medias1[3],
col = rgb(medias1[1],medias1[2],medias1[3]), # Color del punto adicional
size = 50)  # Tamaño del punto adicional
rgl.snapshot("RESULTADOS/R2.6.png", fmt = "png")
### Gráficar los 30 remuestreos ####
plot3d(x = resu[,1],
y = resu[,2],
z = resu[,3],
col = rgb(resu[,1],resu[,2],resu[,3]),size = 15)
# Usar points3d para agregarlo al gráfico
points3d(x = medias1[1],
y = medias1[2],
z = medias1[3],
col = rgb(medias1[1],medias1[2],medias1[3]), # Color del punto adicional
size = 50)  # Tamaño del punto adicional
# Usar points3d para agregarlo al gráfico
points3d(x = medias1[1],
y = medias1[2],
z = medias1[3],
col = rgb(medias1[1],medias1[2],medias1[3]), # Color del punto adicional
size = 50)  # Tamaño del punto adicional
rgl.snapshot("RESULTADOS/R2.7.png", fmt = "png")
#### Imagen 2: Selena QUintanilla ####
### Cargando la imagen desde la ruta local
ruta1 = "/home/angel/Escritorio/MIAPrimerSemestre/Razonamiento bajo incertidumbre/Tarea 6. GIBB SAMPLER/IMAGENES/IM4.jpg" # Ruta local de la imagen
imagen1 = readJPEG(ruta1) # Descomponer la imagen en sus canales RGB
datos1 = pixeles(imagen1)
# Selección de la Carita
subSI1 = datos1[(datos1$X>=130 &datos1$X<=240) &
(datos1$Y>=150 &datos1$Y<=220), ]
plot3d(x = subSI1$Y,
y = 1,
z = subSI1$X,
col = rgb(subSI1$R,subSI1$G,subSI1$B),size = 10)# Fondo
#### Imagen 2: Selena QUintanilla ####
### Cargando la imagen desde la ruta local
ruta1 = "/home/angel/Escritorio/MIAPrimerSemestre/Razonamiento bajo incertidumbre/Tarea 6. GIBB SAMPLER/IMAGENES/IM4.jpg" # Ruta local de la imagen
imagen1 = readJPEG(ruta1) # Descomponer la imagen en sus canales RGB
datos1 = pixeles(imagen1)
# Selección de la Carita
subSI1 = datos1[(datos1$X>=130 &datos1$X<=240) &
(datos1$Y>=150 &datos1$Y<=220), ]
plot3d(x = subSI1$Y,
y = 1,
z = subSI1$X,
col = rgb(subSI1$R,subSI1$G,subSI1$B),size = 10)# Fondo
# Selección de la Carita
subSI1 = datos1[(datos1$X>=520 &datos1$X<=790) &
(datos1$Y>=270 &datos1$Y<=450), ]
plot3d(x = subSI1$Y,
y = 1,
z = subSI1$X,
col = rgb(subSI1$R,subSI1$G,subSI1$B),size = 10)# Fondo
# Puntos de la piel
set.seed(64)
N = 10
mSI1 = subSI1[sample(1:nrow(subSI1),
size= N),]
# Gráficar los valores de los puntos para entrenar
plot3d(x = mSI1$R,
y = mSI1$G,
z = mSI1$B,
col = rgb(mSI1$R,mSI1$G,mSI1$B),size = 30)# Fondo
# Gráficar los valores de los puntos para entrenar
plot3d(x = mSI1$R,
y = mSI1$G,
z = mSI1$B,
col = rgb(mSI1$R,mSI1$G,mSI1$B),size = 30)# Fondo
#### Imagen 2: Selena QUintanilla ####
### Cargando la imagen desde la ruta local
ruta1 = "/home/angel/Escritorio/MIAPrimerSemestre/Razonamiento bajo incertidumbre/Tarea 6. GIBB SAMPLER/IMAGENES/IM4.jpg" # Ruta local de la imagen
imagen1 = readJPEG(ruta1) # Descomponer la imagen en sus canales RGB
datos1 = pixeles(imagen1)
# Selección de la Carita
subSI1 = datos1[(datos1$X>=520 &datos1$X<=790) &
(datos1$Y>=270 &datos1$Y<=450), ]
plot3d(x = subSI1$Y,
y = 1,
z = subSI1$X,
col = rgb(subSI1$R,subSI1$G,subSI1$B),size = 10)# Fondo
# Puntos de la piel
set.seed(64)
N = 10
mSI1 = subSI1[sample(1:nrow(subSI1),
size= N),]
# Gráficar los valores de los puntos para entrenar
plot3d(x = mSI1$R,
y = mSI1$G,
z = mSI1$B,
col = rgb(mSI1$R,mSI1$G,mSI1$B),size = 30)# Fondo
rgl.snapshot("RESULTADOS/R3.2.png", fmt = "png")
### Piel 1
piel1 = mSI1[,1:3]
# Obtener el vector de medias
medias1 = apply(piel1,2,mean);medias1
# Obtener la matriz de varianzas
var1 = var(piel1);var1
### Tomar 3 puntos y muestrear 30 puntos de su trayectoria ####
P = 30
# Definir 3 puntos , el primero sera el origen, el segundo el punto c(1,1,1)
x1 = c(0,0,0)
x2 = c(1,1,1)
x3 = c(0.5,0.5,0.5)
### G1 = Gráficar los 30 remuestreos ####
set.seed(19)
z1 = gibbs(x1,P,medias1,var1)
plot3d(x = z1[,1],
y = z1[,2],
z = z1[,3],
col = rgb(z1[,1],z1[,2],z1[,3]),
size = 20)
# Añadir líneas que conecten los puntos en el orden en que aparecen
lines3d(
x = z1[,1],  # Coordenadas x
y = z1[,2],  # Coordenadas y
z = z1[,3],  # Coordenadas z
col = "black",  # Color de las líneas
lwd = 2       # Grosor de las líneas
)
# Añadir la media
# Usar points3d para agregarlo al gráfico
points3d(x = medias1[1],
y = medias1[2],
z = medias1[3],
col = rgb(medias1[1],medias1[2],medias1[3]), # Color del punto adicional
size = 100)  # Tamaño del punto adicional
# Añadir la media
# Usar points3d para agregarlo al gráfico
points3d(x = medias1[1],
y = medias1[2],
z = medias1[3],
col = rgb(medias1[1],medias1[2],medias1[3]), # Color del punto adicional
size = 100)  # Tamaño del punto adicional
rgl.snapshot("RESULTADOS/R3.3.png", fmt = "png")
### G2 = Gráficar los 30 remuestreos ####
set.seed(19)
z2 = gibbs(x2,P,medias1,var1)
plot3d(x = z2[,1],
y = z2[,2],
z = z2[,3],
col = rgb(z2[,1],z2[,2],z2[,3]),
size = 20)
# Añadir líneas que conecten los puntos en el orden en que aparecen
lines3d(
x = z2[,1],  # Coordenadas x
y = z2[,2],  # Coordenadas y
z = z2[,3],  # Coordenadas z
col = "black",  # Color de las líneas
lwd = 2       # Grosor de las líneas
)
# Añadir la media
# Usar points3d para agregarlo al gráfico
points3d(x = medias1[1],
y = medias1[2],
z = medias1[3],
col = rgb(medias1[1],medias1[2],medias1[3]), # Color del punto adicional
size = 100)  # Tamaño del punto adicional
rgl.snapshot("RESULTADOS/R3.4.png", fmt = "png")
### G3 = Gráficar los 30 remuestreos ####
set.seed(19)
z3 = gibbs(x3,P,medias1,var1)
plot3d(x = z3[,1],
y = z3[,2],
z = z3[,3],
col = rgb(z3[,1],z3[,2],z3[,3]),
size = 20)
# Añadir líneas que conecten los puntos en el orden en que aparecen
lines3d(
x = z3[,1],  # Coordenadas x
y = z3[,2],  # Coordenadas y
z = z3[,3],  # Coordenadas z
col = "black",  # Color de las líneas
lwd = 2       # Grosor de las líneas
)
# Añadir la media
# Usar points3d para agregarlo al gráfico
points3d(x = medias1[1],
y = medias1[2],
z = medias1[3],
col = rgb(medias1[1],medias1[2],medias1[3]), # Color del punto adicional
size = 100)  # Tamaño del punto adicional
rgl.snapshot("RESULTADOS/R3.5.png", fmt = "png")
#### Selección de los 100 puntos ####
##### Tomar 100 puntos aleatorios de toda la imagen ####
set.seed(19)
#mini = datos1[sample(1:nrow(datos1),100),1:3]
mini = as.matrix(subSI1[sample(1:nrow(subSI1),100),1:3])
# Aplicarle el gibbsampler y guardar solo el final
resu = matrix(0,nrow = 100, ncol = 5)
i = 1
for(i in 1:100){
# Aplicar el gibbsampler
gs = gibbs(mini[i,],30,medias1,var1)
# Guardar el ultimo valor
resu[i,] = gs[30,]
}
# Gráficar bonito los puntos
plot3d(x = mini[,1],
y = mini[,2],
z = mini[,3],
col = rgb(mini[,1],mini[,2],mini[,3]),size = 15)
# Usar points3d para agregarlo al gráfico
points3d(x = medias1[1],
y = medias1[2],
z = medias1[3],
col = rgb(medias1[1],medias1[2],medias1[3]), # Color del punto adicional
size = 50)  # Tamaño del punto adicional
rgl.snapshot("RESULTADOS/R3.6.png", fmt = "png")
### Gráficar los 30 remuestreos ####
plot3d(x = resu[,1],
y = resu[,2],
z = resu[,3],
col = rgb(resu[,1],resu[,2],resu[,3]),size = 15)
# Usar points3d para agregarlo al gráfico
points3d(x = medias1[1],
y = medias1[2],
z = medias1[3],
col = rgb(medias1[1],medias1[2],medias1[3]), # Color del punto adicional
size = 50)  # Tamaño del punto adicional
rgl.snapshot("RESULTADOS/R3.7.png", fmt = "png")
#### Imagen 2: Selena QUintanilla ####
### Cargando la imagen desde la ruta local
ruta1 = "/home/angel/Escritorio/MIAPrimerSemestre/Razonamiento bajo incertidumbre/Tarea 6. GIBB SAMPLER/IMAGENES/IM3.jpg" # Ruta local de la imagen
imagen1 = readJPEG(ruta1) # Descomponer la imagen en sus canales RGB
datos1 = pixeles(imagen1)
# Selección de la Carita
subSI1 = datos1[(datos1$X>=130 &datos1$X<=240) &
(datos1$Y>=150 &datos1$Y<=220), ]
# Puntos de la piel
set.seed(64)
N = 10
mSI1 = subSI1[sample(1:nrow(subSI1),
size= N),]
# Obtener el vector de medias
medias1 = apply(piel1,2,mean);medias1
# Obtener la matriz de varianzas
var1 = var(piel1);var1
#### Imagen 3: Ana Sofia ####
### Cargando la imagen desde la ruta local
ruta1 = "/home/angel/Escritorio/MIAPrimerSemestre/Razonamiento bajo incertidumbre/Tarea 6. GIBB SAMPLER/IMAGENES/IM4.jpg" # Ruta local de la imagen
imagen1 = readJPEG(ruta1) # Descomponer la imagen en sus canales RGB
datos1 = pixeles(imagen1)
# Selección de la Carita
subSI1 = datos1[(datos1$X>=520 &datos1$X<=790) &
(datos1$Y>=270 &datos1$Y<=450), ]
plot3d(x = subSI1$Y,
y = 1,
z = subSI1$X,
col = rgb(subSI1$R,subSI1$G,subSI1$B),size = 10)# Fondo
# Puntos de la piel
set.seed(64)
N = 10
mSI1 = subSI1[sample(1:nrow(subSI1),
size= N),]
# Gráficar los valores de los puntos para entrenar
plot3d(x = mSI1$R,
y = mSI1$G,
z = mSI1$B,
col = rgb(mSI1$R,mSI1$G,mSI1$B),size = 30)# Fondo
rgl.snapshot("RESULTADOS/R3.2.png", fmt = "png")
### Piel 1
piel1 = mSI1[,1:3]
# Obtener el vector de medias
medias1 = apply(piel1,2,mean);medias1
# Obtener la matriz de varianzas
var1 = var(piel1);var1
#### Imagen 2: Selena QUintanilla ####
### Cargando la imagen desde la ruta local
ruta1 = "/home/angel/Escritorio/MIAPrimerSemestre/Razonamiento bajo incertidumbre/Tarea 6. GIBB SAMPLER/IMAGENES/IM3.jpg" # Ruta local de la imagen
imagen1 = readJPEG(ruta1) # Descomponer la imagen en sus canales RGB
datos1 = pixeles(imagen1)
# Selección de la Carita
subSI1 = datos1[(datos1$X>=130 &datos1$X<=240) &
(datos1$Y>=150 &datos1$Y<=220), ]
# Puntos de la piel
set.seed(64)
N = 10
mSI1 = subSI1[sample(1:nrow(subSI1),
size= N),]
### Piel 1
piel1 = mSI1[,1:3]
# Obtener el vector de medias
medias1 = apply(piel1,2,mean);medias1
# Obtener la matriz de varianzas
var1 = var(piel1);var1
