A$centers
k
#### Kmedias para la primer imagen con K  = 3 ####
k = 3
A$centers[i,1]
i = 1
color = rgb(A$centers[i,1],A$centers[i,2],A$centers[i,3])
color
X = datos1
X
X[,7]
X[,7]==i
X[X[,7]==i ,7]
X[X[,7]==i ,8] = color
for(i in 1:k){
color = rgb(A$centers[i,1],A$centers[i,2],A$centers[i,3])
X[X[,7]==i ,8] = color
}
X$V8
table(X$V8)
function(kmeds,X){
for(i in 1:k){
color = rgb(kmeds$centers[i,1],kmeds$centers[i,2],kmeds$centers[i,3])
X[X[,7]==i ,8] = color
}
return(colores = X[,8])
}
### FUnción para sacar colores promedio 1
i = 1
datos1[,7]==i
datos1[datos1[,7]==i ,1:3]
colMeans(datos1[datos1[,7]==i ,1:3])
A$centers
# Calcular el vector media
VM = colMeans(datos1[datos1[,7]==i ,1:3])
VM
VM[1]
rgb(VM[1],VM[2],VM[3])
X[X[,7]==i ,8]
rgb(VM[1],VM[2],VM[3])
### FUnción para sacar colores promedio
promcolor = function(X){
for(i in 1:length(unique(X[,7]))){
# Calcular el vector media
VM = colMeans(datos1[datos1[,7]==i ,1:3])
# Obtener el color promedio
X[X[,7]==i ,8] = rgb(VM[1],VM[2],VM[3])
}
return(colores = X[,8])
}
# Agregar el color promedio #
promcolor(datos1)
# Agregar el color promedio #
datos1$ecolor =  promcolor(datos1)
datos1$ecolor
head(datos1)
### Proyectar la imagen ####
plot3d(x = datos1$R,y = datos1$G,z = datos1$B,
col = datos1$ecolor,size = 30)
plot3d(x = datos1$R,y = datos1$G,z = datos1$B,
col = datos1$ecolor,size = 30)
### Proyectar la imagen ####
plot3d(x = datos1$R,y = datos1$G,z = datos1$B,
col = datos1$ecolor,size = 10)
### Proyectar la imagen ####
plot3d(x = datos1$R,y = datos1$G,z = datos1$B,
col = datos1$ecolor,size = 5)
### Proyectar la imagen ####
plot3d(x = datos1$Y,
y = 1,
z = datos1$X,
col = datos1$color)
### Proyectar la imagen ####
plot3d(x = datos1$Y,
y = 1,
z = datos1$X,
col = datos1$ecolor)
rgl.snapshot("R1.2.png", fmt = "png")
rgl.snapshot("R1.2.png", fmt = "png")
#### Kmedias para la primer imagen con K  = 5 ####
k = 5
A = kmeans(datos1[,1:3],k)
datos1$etiqueta = A$cluster
# Agregar el color promedio #
datos1$ecolor =  promcolor(datos1)
### Proyectar la imagen ####
plot3d(x = datos1$Y,
y = 1,
z = datos1$X,
col = datos1$ecolor)
rgl.snapshot("R1.3.png", fmt = "png")
#### Kmedias para la primer imagen con K  = 10 ####
k = 10
A = kmeans(datos1[,1:3],k)
datos1$etiqueta = A$cluster
# Agregar el color promedio #
datos1$ecolor =  promcolor(datos1)
### Proyectar la imagen ####
plot3d(x = datos1$Y,
y = 1,
z = datos1$X,
col = datos1$ecolor)
rgl.snapshot("R1.4.png", fmt = "png")
#### Kmedias para la primer imagen con K  = 3 ###
k = 3
A = kmeans(datos1[,1:3],k)
datos1$etiqueta = A$cluster
# Agregar el color promedio #
datos1$ecolor =  promcolor(datos1)
### Proyectar la imagen ####
plot3d(x = datos1$Y,
y = 1,
z = datos1$X,
col = datos1$ecolor)
rgl.snapshot("R1.2.png", fmt = "png")
#### Sección de K medias para imagen 2####
ruta2 = "IMAGENES/IM4.jpg"
#### Sección de K medias para imagen 2####
ruta2 = "IMAGENES/IM4.jpg"
imagen2 = readJPEG(ruta2) # Descomponer la imagen en sus canales RGB
datos2 = pixeles(imagen2)
dim(imagen2) # La imagen 1 tiene 1152 X 768  = 884,736
1024*768
#### Definir el criterio de la intra varianza
set.seed(2024)
INTRA(datos2[,1:3])
#### Kmedias para la primer imagen con K  = 3 ###
k = 3
A = kmeans(datos1[,1:3],k)
datos1$etiqueta = A$cluster
# Agregar el color promedio #
datos1$ecolor =  promcolor(datos1)
### Proyectar la imagen ####
plot3d(x = datos1$Y,
y = 1,
z = datos1$X,
col = datos1$ecolor)
#### Kmedias para la primer imagen con K  = 3 ###
k = 3
A = kmeans(datos2[,1:3],k)
datos2$etiqueta = A$cluster
# Agregar el color promedio #
datos2$ecolor =  promcolor(datos2)
### Proyectar la imagen ####
plot3d(x = datos2$Y,
y = 1,
z = datos2$X,
col = datos2$ecolor)
#### Kmedias para la primer imagen con K  = 3 ###
k = 3
A = kmeans(datos2[,1:3],k)
A
datos2$etiqueta = A$cluster
# Agregar el color promedio #
datos2$ecolor =  promcolor(datos2)
### Proyectar la imagen ####
plot3d(x = datos2$Y,
y = 1,
z = datos2$X,
col = datos2$ecolor)
### FUnción para sacar colores promedio
promcolor = function(X){
for(i in 1:length(unique(X[,7]))){
# Calcular el vector media
VM = colMeans(X[X[,7]==i ,1:3])
# Obtener el color promedio
X[X[,7]==i ,8] = rgb(VM[1],VM[2],VM[3])
}
return(colores = X[,8])
}
#### Sección de K medias para imagen 2####
ruta2 = "IMAGENES/IM4.jpg"
imagen2 = readJPEG(ruta2) # Descomponer la imagen en sus canales RGB
datos2 = pixeles(imagen2)
dim(imagen2) # La imagen 1 tiene 1024 X 768  = 786,432
#### Definir el criterio de la intra varianza
set.seed(2024)
#### Kmedias para la primer imagen con K  = 3 ###
k = 3
A = kmeans(datos2[,1:3],k)
datos2$etiqueta = A$cluster
# Agregar el color promedio #
datos2$ecolor =  promcolor(datos2)
### Proyectar la imagen ####
plot3d(x = datos2$Y,
y = 1,
z = datos2$X,
col = datos2$ecolor)
k = 2
A = kmeans(datos2[,1:3],k)
datos2$etiqueta = A$cluster
# Agregar el color promedio #
datos2$ecolor =  promcolor(datos2)
### Proyectar la imagen ####
plot3d(x = datos2$Y,
y = 1,
z = datos2$X,
col = datos2$ecolor)
#### Kmedias para la primer imagen con K  = 3 ###
k = 3
A = kmeans(datos2[,1:3],k)
datos2$etiqueta = A$cluster
# Agregar el color promedio #
datos2$ecolor =  promcolor(datos2)
### Proyectar la imagen ####
plot3d(x = datos2$Y,
y = 1,
z = datos2$X,
col = datos2$ecolor)
rgl.snapshot("R2.2.png", fmt = "png")
#### Kmedias para la primer imagen con K  = 5 ###
k = 5
A = kmeans(datos2[,1:3],k)
datos2$etiqueta = A$cluster
# Agregar el color promedio #
datos2$ecolor =  promcolor(datos2)
### Proyectar la imagen ####
plot3d(x = datos2$Y,
y = 1,
z = datos2$X,
col = datos2$ecolor)
### Proyectar la imagen ####
plot3d(x = datos2$Y,
y = 1,
z = datos2$X,
col = datos2$ecolor)
rgl.snapshot("R2.3.png", fmt = "png")
#### Kmedias para la primer imagen con K  = 10 ###
k = 10
A = kmeans(datos2[,1:3],k)
datos2$etiqueta = A$cluster
# Agregar el color promedio #
datos2$ecolor =  promcolor(datos2)
### Proyectar la imagen ####
plot3d(x = datos2$Y,
y = 1,
z = datos2$X,
col = datos2$ecolor)
rgl.snapshot("R2.4.png", fmt = "png")
#### Sección de K medias para imagen 1####
ruta1 = "IMAGENES/IM2.jpg"
imagen1 = readJPEG(ruta1) # Descomponer la imagen en sus canales RGB
datos1 = pixeles(imagen1)
dim(imagen1) # La imagen 1 tiene 1152 X 768  = 884,736
#### Definir el criterio de la intra varianza
set.seed(2024)
INTRA(datos1[,1:3])
#### Kmedias para la primer imagen con K  = 3 ###
k = 3
A = kmeans(datos1[,1:3],k)
datos1$etiqueta = A$cluster
# Agregar el color promedio #
datos1$ecolor =  promcolor(datos1)
### Proyectar la imagen ####
plot3d(x = datos1$Y,
y = 1,
z = datos1$X,
col = datos1$ecolor)
rgl.snapshot("RESULTADOS/R1.2.png", fmt = "png")
#### Kmedias para la primer imagen con K  = 5 ####
k = 5
A = kmeans(datos1[,1:3],k)
datos1$etiqueta = A$cluster
# Agregar el color promedio #
datos1$ecolor =  promcolor(datos1)
### Proyectar la imagen ###
plot3d(x = datos1$Y,
y = 1,
z = datos1$X,
col = datos1$ecolor)
rgl.snapshot("RESULTADOS/R1.3.png", fmt = "png")
#### Kmedias para la primer imagen con K  = 10 ####
k = 10
A = kmeans(datos1[,1:3],k)
datos1$etiqueta = A$cluster
# Agregar el color promedio #
datos1$ecolor =  promcolor(datos1)
### Proyectar la imagen ###
plot3d(x = datos1$Y,
y = 1,
z = datos1$X,
col = datos1$ecolor)
rgl.snapshot("RESULTADOS/R1.4.png", fmt = "png")
#### Sección de K medias para imagen 2####
ruta2 = "IMAGENES/IM4.jpg"
imagen2 = readJPEG(ruta2) # Descomponer la imagen en sus canales RGB
datos2 = pixeles(imagen2)
dim(imagen2) # La imagen 1 tiene 1024 X 768  = 786,432
#### Definir el criterio de la intra varianza
set.seed(2024)
INTRA(datos2[,1:3])
#### Kmedias para la primer imagen con K  = 3 ###
k = 3
A = kmeans(datos2[,1:3],k)
datos2$etiqueta = A$cluster
# Agregar el color promedio #
datos2$ecolor =  promcolor(datos2)
### Proyectar la imagen ####
plot3d(x = datos2$Y,
y = 1,
z = datos2$X,
col = datos2$ecolor)
rgl.snapshot("RESULTADOS/R2.2.png", fmt = "png")
#### Kmedias para la primer imagen con K  = 5 ###
k = 5
A = kmeans(datos2[,1:3],k)
datos2$etiqueta = A$cluster
# Agregar el color promedio #
datos2$ecolor =  promcolor(datos2)
### Proyectar la imagen ####
plot3d(x = datos2$Y,
y = 1,
z = datos2$X,
col = datos2$ecolor)
rgl.snapshot("RESULTADOS/R2.3.png", fmt = "png")
#### Kmedias para la primer imagen con K  = 10 ###
k = 10
A = kmeans(datos2[,1:3],k)
datos2$etiqueta = A$cluster
# Agregar el color promedio #
datos2$ecolor =  promcolor(datos2)
### Proyectar la imagen ####
plot3d(x = datos2$Y,
y = 1,
z = datos2$X,
col = datos2$ecolor)
rgl.snapshot("RESULTADOS/R2.4.png", fmt = "png")
#### Sección de K medias para imagen 3####
ruta3 = "IMAGENES/IM5.jpg"
imagen3 = readJPEG(ruta3) # Descomponer la imagen en sus canales RGB
datos3 = pixeles(imagen3)
dim(imagen3) # La imagen 1 tiene 1024 X 768  = 786,432
409*715
#### Definir el criterio de la intra varianza
set.seed(2024)
INTRA(datos3[,1:3])
#### Sección de K medias para imagen 3####
ruta3 = "IMAGENES/IM5.jpg"
imagen3 = readJPEG(ruta3) # Descomponer la imagen en sus canales RGB
datos3 = pixeles(imagen3)
dim(imagen3) # La imagen 1 tiene 409 X 715  = 292,435
#### Definir el criterio de la intra varianza
set.seed(2024)
INTRA(datos3[,1:3])
#### Kmedias para la tercera imagen con K  = 3 ###
k = 3
A = kmeans(datos3[,1:3],k)
datos3$etiqueta = A$cluster
# Agregar el color promedio #
datos3$ecolor =  promcolor(datos3)
### Proyectar la imagen ####
plot3d(x = datos3$Y,
y = 1,
z = datos3$X,
col = datos3$ecolor)
rgl.snapshot("RESULTADOS/R3.2.png", fmt = "png")
#### Kmedias para la segunda imagen con K  = 5 ###
k = 5
A = kmeans(datos3[,1:3],k)
datos3$etiqueta = A$cluster
# Agregar el color promedio #
datos3$ecolor =  promcolor(datos3)
### Proyectar la imagen ####
plot3d(x = datos3$Y,
y = 1,
z = datos3$X,
col = datos3$ecolor)
rgl.snapshot("RESULTADOS/R2.3.png", fmt = "png")
#### Kmedias para la segunda imagen con K  = 10 ###
k = 10
A = kmeans(datos3[,1:3],k)
datos3$etiqueta = A$cluster
# Agregar el color promedio #
datos3$ecolor =  promcolor(datos3)
### Proyectar la imagen ####
plot3d(x = datos3$Y,
y = 1,
z = datos3$X,
col = datos3$ecolor)
rgl.snapshot("RESULTADOS/R2.4.png", fmt = "png")
#### Sección de K medias para imagen 1####
ruta1 = "IMAGENES/IM2.jpg"
imagen1 = readJPEG(ruta1) # Descomponer la imagen en sus canales RGB
datos1 = pixeles(imagen1)
dim(imagen1) # La imagen 1 tiene 1152 X 768  = 884,736
#### Definir el criterio de la intra varianza
set.seed(2024)
INTRA(datos1[,1:3])
#### Kmedias para la primer imagen con K  = 3 ###
k = 3
A = kmeans(datos1[,1:3],k)
datos1$etiqueta = A$cluster
# Agregar el color promedio #
datos1$ecolor =  promcolor(datos1)
### Proyectar la imagen ####
plot3d(x = datos1$Y,
y = 1,
z = datos1$X,
col = datos1$ecolor)
rgl.snapshot("RESULTADOS/R1.2.png", fmt = "png")
#### Kmedias para la primer imagen con K  = 5 ####
k = 5
A = kmeans(datos1[,1:3],k)
datos1$etiqueta = A$cluster
# Agregar el color promedio #
datos1$ecolor =  promcolor(datos1)
### Proyectar la imagen ###
plot3d(x = datos1$Y,
y = 1,
z = datos1$X,
col = datos1$ecolor)
rgl.snapshot("RESULTADOS/R1.3.png", fmt = "png")
#### Kmedias para la primer imagen con K  = 10 ####
k = 10
A = kmeans(datos1[,1:3],k)
datos1$etiqueta = A$cluster
# Agregar el color promedio #
datos1$ecolor =  promcolor(datos1)
### Proyectar la imagen ###
plot3d(x = datos1$Y,
y = 1,
z = datos1$X,
col = datos1$ecolor)
rgl.snapshot("RESULTADOS/R1.4.png", fmt = "png")
#### Sección de K medias para imagen 2####
ruta2 = "IMAGENES/IM4.jpg"
imagen2 = readJPEG(ruta2) # Descomponer la imagen en sus canales RGB
datos2 = pixeles(imagen2)
dim(imagen2) # La imagen 1 tiene 1024 X 768  = 786,432
#### Definir el criterio de la intra varianza
set.seed(2024)
INTRA(datos2[,1:3])
#### Kmedias para la segunda imagen con K  = 3 ###
k = 3
A = kmeans(datos2[,1:3],k)
datos2$etiqueta = A$cluster
# Agregar el color promedio #
datos2$ecolor =  promcolor(datos2)
### Proyectar la imagen ####
plot3d(x = datos2$Y,
y = 1,
z = datos2$X,
col = datos2$ecolor)
rgl.snapshot("RESULTADOS/R2.2.png", fmt = "png")
#### Kmedias para la segunda imagen con K  = 5 ###
k = 5
A = kmeans(datos2[,1:3],k)
datos2$etiqueta = A$cluster
# Agregar el color promedio #
datos2$ecolor =  promcolor(datos2)
### Proyectar la imagen ####
plot3d(x = datos2$Y,
y = 1,
z = datos2$X,
col = datos2$ecolor)
rgl.snapshot("RESULTADOS/R2.3.png", fmt = "png")
#### Kmedias para la segunda imagen con K  = 10 ###
k = 10
A = kmeans(datos2[,1:3],k)
datos2$etiqueta = A$cluster
# Agregar el color promedio #
datos2$ecolor =  promcolor(datos2)
### Proyectar la imagen ####
plot3d(x = datos2$Y,
y = 1,
z = datos2$X,
col = datos2$ecolor)
rgl.snapshot("RESULTADOS/R2.4.png", fmt = "png")
#### Sección de K medias para imagen 3####
ruta3 = "IMAGENES/IM5.jpg"
imagen3 = readJPEG(ruta3) # Descomponer la imagen en sus canales RGB
datos3 = pixeles(imagen3)
dim(imagen3) # La imagen 1 tiene 409 X 715  = 292,435
#### Definir el criterio de la intra varianza
set.seed(2024)
INTRA(datos3[,1:3])
#### Kmedias para la tercera imagen con K  = 3 ###
k = 3
A = kmeans(datos3[,1:3],k)
datos3$etiqueta = A$cluster
# Agregar el color promedio #
datos3$ecolor =  promcolor(datos3)
### Proyectar la imagen ####
plot3d(x = datos3$Y,
y = 1,
z = datos3$X,
col = datos3$ecolor)
rgl.snapshot("RESULTADOS/R3.2.png", fmt = "png")
#### Kmedias para la segunda imagen con K  = 5 ###
k = 5
A = kmeans(datos3[,1:3],k)
datos3$etiqueta = A$cluster
# Agregar el color promedio #
datos3$ecolor =  promcolor(datos3)
### Proyectar la imagen ####
plot3d(x = datos3$Y,
y = 1,
z = datos3$X,
col = datos3$ecolor)
rgl.snapshot("RESULTADOS/R3.3.png", fmt = "png")
#### Kmedias para la segunda imagen con K  = 10 ###
k = 10
A = kmeans(datos3[,1:3],k)
datos3$etiqueta = A$cluster
# Agregar el color promedio #
datos3$ecolor =  promcolor(datos3)
### Proyectar la imagen ####
plot3d(x = datos3$Y,
y = 1,
z = datos3$X,
col = datos3$ecolor)
rgl.snapshot("RESULTADOS/R3.4.png", fmt = "png")
