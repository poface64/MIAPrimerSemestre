knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
datos = iris
# Mostrar los primeros 6 datos para ver el contenido de los datos
head(datos)
# Versión mejorada
library(flextable)
flextable(head(datos))
names(datos)
# Mostrar los primeros 6 datos para ver el contenido de los datos
head(datos)
## Versión mejorada
library(flextable) # Liberia para hacer tablas bonitas
flextable(head(datos))
## Versión aun mejor
theme_box(flextable(head(datos)))
## Versión aun mejor
autofit(theme_box(flextable(head(datos))) )
library(palmerpenguins)
# Contabilizando la cantidad de flores
library(palmerpenguins)
datos = palmerpenguins
datos = penguins
datos
datos = as.data.frame(penguins)
datos = datos[,c(1,3:6)]
datos
apply(is.na(datos),2,sum)
datos = datos[is.na(datos$bill_length_mm)==F,]
apply(is.na(datos),2,sum)
write.csv("pinguinos.csv",row.names = F)
write.csv(datos,"pinguinos.csv",row.names = F)
rm(list=ls())
datos = iris
names(datos)
# Mostrar los primeros 6 datos para ver el contenido de los datos
head(datos)
# Cargar los datos de los pinguinos
ruta = "pinguinos.csv"
datos = read.csv(ruta)
names(datos)
# Mostrar los primeros 6 datos para ver el contenido de los datos
head(datos)
# Mostrar los primeros 6 datos para ver el contenido de los datos
head(datos)
## Versión mejorada
library(flextable) # Liberia para hacer tablas bonitas
flextable(head(datos))
## Versión aun mejor
autofit(theme_box(flextable(head(datos))))
#### Contabilizar cuantos pinguinos hay de cada especie
str(datos)
#### Contabilizar cuantos pinguinos hay de cada especie
as.data.frame(str(datos))
#### Contabilizar cuantos pinguinos hay de cada especie
a = as.data.frame(str(datos))
a
# Crea un nuevo DataFrame con la información
tiposvariable =  data.frame(
Nombre = nombres,
Tipo = tipos,
stringsAsFactors = FALSE)
## Revisar el tipo de variable que tiene
# Extrae los nombres de las variables
nombres =  names(datos)
# Extrae los tipos de las variables
tipos = sapply(datos, class)
# Crea un nuevo DataFrame con la información
tiposvariable =  data.frame(
Nombre = nombres,
Tipo = tipos,
stringsAsFactors = FALSE)
# Reportar bonito
tiposvariable
# Reportar bonito
flextable(tiposvariable)
## Versión aun mejor
autofit(theme_box(flextable(head(datos))))
# Crea un nuevo DataFrame con la información
tiposvariable =  data.frame(
Nombre = nombres,
Tipo = tipos,
stringsAsFactors = FALSE)
tiposvariable
# Reportar bonito
flextable(tiposvariable)
# Reportar bonito
theme_flextable(flextable(tiposvariable))
# Reportar bonito
theme_box(flextable(tiposvariable))
# Obtener el conteo de cuantos pinguinos hay por cada especie
conteo = table(Especies = datos$species)
conteo
# Convertir la tabla de frecuencias en un data frame
conteo1 = as.data.frame(conteo)
conteo1
# Reportar bonito en una tabla
theme_box(flextable(conteo1))
# Obtener la media en general de todas las variables tal cual
medias1 = apply(datos[,-1],2,mean)
medias1
str(medias1)
as.data.frame(medias1)
as.data.frame(t(medias1))
# Obtener la media, la mediana y la varianza de todas las variables tal cual
medias1 = apply(datos[,-1],2,mean)
medianas1 = apply(datos[,-1],2,median)
# Obtener la media, la mediana, la varianza y la desviación estandar
medias1 = apply(datos[,-1],2,mean)
medianas1 = apply(datos[,-1],2,median)
varianza1 = apply(datos[,-1],2,var)
desvi1 = apply(datos[,-1],2,sd)
medias1
# Pegar los datos juntos y hacerlos una tabla
rbind.data.frame(medias1,medianas1)
as.data.frame(apply(datos[,-1],2,mean))
# Obtener la media, la mediana, la varianza y la desviación estandar
medias1 = apply(datos[,-1],2,mean)
medianas1 = apply(datos[,-1],2,median)
varianza1 = apply(datos[,-1],2,var)
desvi1 = apply(datos[,-1],2,sd)
# Pegar los datos juntos y hacerlos una tabla
rbind(medias1,medianas1)
# Pegar los datos juntos y hacerlos una tabla
rbind(medias1,medianas1,varianza1,desvi1)
# Pegar los datos juntos y hacerlos una tabla
as.data.frame(rbind(medias1,medianas1,varianza1,desvi1))
# Pegar los datos juntos y hacerlos una tabla
resumen1 = (rbind(medias1,medianas1,varianza1,desvi1))
# Pegar los datos juntos y hacerlos una tabla
resumen1 = (rbind(medias1,medianas1,varianza1,desvi1))
resumen1
resumen1
# Agregar el nombre del estadístico a la fila
resumen2 = cbind.data.frame(Estadístico = c("Media","Mediana","Varianza","Desviación"),resumen1)
resumen2
# Reportar bonito
autofit(theme_box(flextable(conteo1)))
# Reportar bonito
autofit(theme_box(flextable(resumen2)))
head(datos)
tapply(datos$bill_length_mm, datos$species, mean)
medias1 = apply(datos[,-1],2,mean)
medianas1 = apply(datos[,-1],2,median)
varianza1 = apply(datos[,-1],2,var)
desvi1 = apply(datos[,-1],2,sd)
# Pegar los datos juntos y hacerlos una tabla
resumen1 = (rbind(medias1,medianas1,varianza1,desvi1))
resumen1
# Reportar bonito
autofit(theme_box(flextable(resumen2)))
### Automatizando para extraer las estadísticas por especie ###
# Lista de especies únicas en el dataset
especies <- unique(datos$species)
# Inicializar un data.frame vacío para guardar los resultados
resumen_total <- data.frame()
# Ciclo for para cada especie
for (especie in especies) {
# Filtrar los datos para la especie actual
datos_especie <- subset(datos, species == especie)[,-1]  # Quitamos la columna 'species'
# Calcular los estadísticos para la especie actual
medias <- apply(datos_especie, 2, mean)
medianas <- apply(datos_especie, 2, median)
varianza <- apply(datos_especie, 2, var)
desviacion <- apply(datos_especie, 2, sd)
# Crear el resumen de la especie actual en un data.frame
resumen_especie <- rbind(medias, medianas, varianza, desviacion)
resumen_especie <- cbind.data.frame(Estadístico = c("Media", "Mediana", "Varianza", "Desviación"),
resumen_especie)
# Agregar una columna para la especie
resumen_especie$Especie <- especie
# Añadir los resultados al resumen total
resumen_total <- rbind(resumen_total, resumen_especie)
}
resumen_total
flextable(resumen_total)
# Mostrar bonito el resumen
resumen_total = resumen_total[,c(1,6,2:5)]
flextable(resumen_total)
autofit(theme_box(flextable(resumen_total)))
# Reordenar columnas para que 'Especie' esté al principio
resumen_total <- resumen_total[, c("Especie", "Estadístico", names(resumen_total)[3:ncol(resumen_total)])]
resumen_total
# Mostrar la tabla final de resumen
print(resumen_total)
barplot(conteo1)
barplot(conteo1$Freq)
?barplot
barplot(conteo1$Freq~conteo1$Especies)
barplot(conteo1$Freq~conteo1$Especies,
col = c("red","blue","green"))
barplot(conteo1$Freq~conteo1$Especies,
col = c("red","blue","green"),
xlab = "Especies",
ylab = "Frecuencias",
main = "Gráfico de barras para las especies de pinguinos")
head(datos)
plot(datos$bill_length_mm,datos$bill_depth_mm,
col= datos$species)
plot(datos$bill_length_mm,datos$bill_depth_mm,
col= as.factor(datos$species))
plot(datos$bill_length_mm,datos$bill_depth_mm,
col= as.factor(datos$species),pch = 16)
plot(datos$bill_length_mm,datos$bill_depth_mm,
col= as.factor(datos$species),pch = 16,
xlab = "Longitud del pico",
ylab = "Profundidad del pico",
main = "gráfico de dispersión entre la longitud del pico y la profundidad del pico por especie")
plot(datos$bill_length_mm,datos$bill_depth_mm,
col= as.factor(datos$species),pch = 16,
xlab = "Longitud del pico",
ylab = "Profundidad del pico",
main = "gráfico de dispersión entre la longitud del pico y\n la profundidad del pico por especie")
plot(datos$bill_length_mm,datos$bill_depth_mm,
col= as.factor(datos$species),pch = 16,
xlab = "Longitud del pico",
ylab = "Profundidad del pico",
main = "Gráfico de dispersión entre la longitud del pico y\n la profundidad del pico por especie")
hist(datos$bill_length_mm)
hist(datos$bill_length_mm,col = as.factor(datos$species))
hist(datos$bill_length_mm, col = "blue")
boxplot(datos$bill_length_mm~datos$species)
boxplot(datos$bill_length_mm~datos$species,
col = as.factor(datos$bill_length_mm))
boxplot(datos$bill_length_mm~datos$species,
col = as.factor(datos$bill_length_mm),
xlab = "Especies",
ylab = "Longitud del pico")
boxplot(datos$bill_length_mm~datos$species,
col = as.factor(datos$bill_length_mm),
xlab = "Especies",
ylab = "Longitud del pico",
main = "Gráfico de cajas de la longitud del pico por especies")
# Gráfico de pastel
pie(conteo1$Freq)
# Gráfico de pastel
pie(conteo1$Freq,labels = conteo1$Especies)
hist(datos$bill_length_mm, col = "blue")
